FROM tukiyo3/xrdp:core

ARG VNC_USER=ubuntu
ARG VNC_PASSWD=password
ENV VNC_HOME=/home/${VNC_USER}/

# LXDE
RUN pkgadd.sh lxde-core openbox-lxde-session lxterminal
RUN sed -i -e 's/openbox-session/startlxde/g' /etc/skel/.xsession

# tightvncserver
RUN pkgadd.sh \
    vim wget \
    ca-certificates fonts-liberation libnspr4 libnss3 xdg-utils mozc-utils-gui \
    gnome-panel gnome-settings-daemon metacity nautilus gnome-terminal xfonts-base tightvncserver

# Chrome
RUN cd /tmp \
    && wget -q --no-check-certificate https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb \
    && dpkg -i google-chrome-stable_current_amd64.deb

RUN sed -i "s/\/usr\/bin\/google-chrome-stable.%U/& --user-data-dir=\/home\/$VNC_USER\/chrome/g" /usr/share/applications/google-chrome.desktop

# Application
RUN pkgadd.sh \
    gnote bzip2 ubuntu-restricted-extras ffmpeg

# firefox
# 本来 snap で入れるべきだけど snap がうまく起動しない
RUN cd /tmp \
    && wget -q -O firefox-latest.tar.bz2 "https://download.mozilla.org/?product=firefox-latest&os=linux64&lang=ja" \
    && tar jxf firefox-latest.tar.bz2 \
    && mv firefox /opt \
    && ln -s /opt/firefox/firefox /usr/local/bin/firefox \
    && wget -q https://raw.githubusercontent.com/mozilla/sumo-kb/main/install-firefox-linux/firefox.desktop -P /usr/share/applications

RUN groupadd -g 1000 ${VNC_USER} && \
    useradd -m -s /bin/bash -u 1000 -g 1000 -G sudo ${VNC_USER} && \
    echo ${VNC_USER}:${VNC_PASSWD} | chpasswd && \
    echo "${VNC_USER}   ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

# コンテナ起動時のスクリプト
# COPY entrypoint.sh /usr/local/bin/
# RUN chmod +x /usr/local/bin/entrypoint.sh
# ENTRYPOINT ["entrypoint.sh"]
RUN ["/bin/bash", "-c", "echo $VNC_HOME"]
# ADD xstartup /root/.vnc/xstartup
# USER ${VNC_USER}
#RUN mkdir -p ${VNC_HOME}/.local/share
ADD passwd ${VNC_HOME}/.vnc/passwd
ADD xstartup ${VNC_HOME}/.vnc/xstartup
RUN \
    mkdir -p ${VNC_HOME}/.local/share \
    && mkdir -p ${VNC_HOME}/.mozilla/firefox \
    && mkdir -p ${VNC_HOME}/chrome \
    && touch ${VNC_HOME}/.sudo_as_admin_successful \
    && chmod 600 ${VNC_HOME}/.vnc/passwd \
    && chmod +x ${VNC_HOME}/.vnc/xstartup \
    && chown -R ${VNC_USER}:${VNC_USER} ${VNC_HOME}

# RUN { \
# 	echo "Hello"; \
# 	echo "exec /entrypoint-parent.sh \"\$@\""; \
#     } >> /usr/local/bin/entrypoint.sh

# Entrypoint を docker-compose.yml で上書き
ENV USER=${VNC_USER}
ADD entrypoint-xlde.sh /usr/local/bin/entrypoint-xlde.sh
RUN chmod +x /usr/local/bin/entrypoint-xlde.sh

USER ${VNC_USER}
WORKDIR ${VNC_HOME}
#CMD /usr/bin/vncserver :1 -name develop -geometry 1280x800 -depth 24 && tail -f /home\/$VNC_USER\/.vnc/*:1.log
# コンテナ起動時のスクリプト(上書き)
# COPY entrypoint.sh ${VNC_HOME}/
# RUN sudo chmod +x ${VNC_HOME}/entrypoint.sh
#CMD ["/home/apline/entrypoint.sh"]
# core 側でUSER作成しているのでdocker-compose.yml environment user にユーザセット

#RUN chown ubuntu /home/ubuntu/.vnc/passwd
# RUN chmod 600 /root/.vnc/passwd
# /etc/tightvncserver.conf
# CMD /usr/bin/vncserver :1 -geometry 1280x800 -depth 24 && tail -f /root/.vnc/*:1.log
# vncserver -kill :1
# sudo apt install xfonts-base x11-xserver-utils
# ~/.xsession
# dconf write /desktop/ibus/general/preload-engines "['mozc-jp']"
# export GTK_IM_MODULE=ibus XMODIFIERS=@im=ibus QT_IM_MODULE=ibus
# ibus-daemon -d
# startlxde <--
#
#EXPOSE 5901
#.sudo_as_admin_successful
